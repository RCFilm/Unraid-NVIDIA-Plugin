<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "UnraidNVIDIA">
<!ENTITY author    "LinuxServer.io">
<!ENTITY version   "2018.12.16a">
<!ENTITY md5       "ac84296592e2afd57dc2da4ab42540aa">
<!ENTITY launch    "Settings/UnraidNVIDIA">
<!ENTITY plugdir   "/usr/local/emhttp/plugins/&name;">
<!ENTITY github    "bassrock/Unraid-NVIDIA-Plugin">
<!ENTITY plugin "/boot/config/plugins/&name;">
<!ENTITY repo "https://raw.githubusercontent.com/&github;/master">
<!ENTITY pluginURL "&repo;/plugins/&name;.plg">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;">

<CHANGES>
###2018-09-16f
- Initial internal release.
</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/usr/bin/php">
<INLINE>
<![CDATA[
<?
  $version = parse_ini_file("/etc/unraid-version");

  if ( version_compare($version['version'],"6.6", "<") )
  {
    echo "********************************************************************\n";
    echo "\n";
    echo "Unraid NVIDIA Plugin Requires unRaid version 6.6 or greater to run\n";
    echo "\n";
    echo "********************************************************************\n";
    exit(1);
  }
?>
]]>
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
# Remove old 'source' files
rm -f $(ls /boot/config/plugins/&name;/&name;*.txz 2>/dev/null|grep -v '&version;')
rm -rf /tmp/mediabuild
</INLINE>
</FILE>

<FILE Name="&plugin;/packages/libseccomp-2.3.3-x86_64-1_SBo.tgz" Run="/sbin/upgradepkg --install-new">
    <URL>&repo;/packages/libseccomp-2.3.3-x86_64-1_SBo.tgz</URL>
    <MD5>7fcf24f105afc9e38f4cadfb03fa0bf9</MD5>
</FILE>

<FILE Name="&plugin;/packages/runc-1.0.0_rc5-x86_64-1_SBo.tgz" Run="/sbin/upgradepkg --install-new">
    <URL>&repo;/packages/runc-1.0.0_rc5-x86_64-1_SBo.tgz</URL>
    <MD5>efc2b8be8cdb604f8338b96c6af19636</MD5>
</FILE>

<FILE Name="&plugin;/packages/nvidia-kernel-410.73_4.18.20_unRAID-x86_64-1_SBo.tgz" Run="/sbin/upgradepkg --install-new">
    <URL>&repo;/packages/nvidia-kernel-410.73_4.18.20_unRAID-x86_64-1_SBo.tgz</URL>
    <MD5>380c79d65b74ffe6546c9668d7d6c4d6</MD5>
</FILE>

<FILE Name="&plugin;/packages/nvidia-driver-410.73-x86_64-1_SBo.tgz" Run="/sbin/upgradepkg --install-new">
    <URL>&repo;/packages/nvidia-driver-410.73-x86_64-1_SBo.tgz</URL>
    <MD5>3b9c5d43bd38425b3ea585c951cf7c77</MD5>
</FILE>

<FILE Name="/etc/docker/daemon.json">
    <URL>https://raw.githubusercontent.com/CHBMB/Unraid-NVIDIA/master/files/daemon.json</URL>
</FILE>

<FILE Name="/usr/bin/nvidia-container-runtime-hook">
    <URL>https://github.com/NVIDIA/nvidia-container-runtime/releases/download/v1.4.0-1/nvidia-container-runtime-hook.amd64</URL>
</FILE>


<FILE Name="&plugin;/packages/libnvidia-container_1.0.0_x86_64.tar.xz">
    <URL>https://github.com/NVIDIA/libnvidia-container/releases/download/v1.0.0/libnvidia-container_1.0.0_x86_64.tar.xz</URL>
</FILE>
<!--
The 'source' file.
-->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>https://raw.github.com/&github;/master/archive/&name;-&version;.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
<INLINE>

if [ -d /dev/dri ]; then
    chown -R nobody:users /dev/dri
    chmod -R 777 /dev/dri
fi

ln -sf /usr/bin/runc /usr/bin/nvidia-container-runtime
chmod +x /usr/bin/nvidia-container-runtime-hook
cd /boot/config/plugins/&name;/packages
tar --strip-components=1 -C / -xvf libnvidia-container_1.0.0_x86_64.tar.xz
echo "/usr/local/lib" >> /etc/ld.so.conf
ldconfig

# Parse Nvidia Details

mkdir -p /tmp/nvidia/
lspci -v | grep 'GeForce\|Quadro' | grep VGA | awk -F '[][]' '{print $2}' |  awk '{ print $0 > "/tmp/nvidia/gfx"NR}'
lspci -v | grep driver | grep nvidia | cut -d : -f 2 | awk '{ print $0 > "/tmp/nvidia/drivers"NR}'
lspci -v | grep modules | grep nvidia | cut -d : -f 2 | awk '{ print $0 > "/tmp/nvidia/modules"NR}'

echo ""
echo "----------------------------------------------------"
echo " &name; has been installed."
echo " LinuxServer.io"
echo " Version: &version;"
echo "----------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
removepkg &name;-&version;
rm -rf &plugdir;
rm -rf /boot/config/plugins/&name;
rm -rf /tmp/mediabuild
</INLINE>
</FILE>
</PLUGIN>
